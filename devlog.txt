BigBird
Jun Hong Wang
Ruiwen (Raven) Tang
Michael Kamela
pd 6
---------------------
Birdie's Mockeria


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
USAGE:
* Replace all fields, angle brackets included, with specified info.
  eg, pd <pd#> --> pd 3
* Delete this instruction block once all teammates understand usage.

devlog--
Use keyboard shortcut to jump to end,
 replicate entry template,
 modify appropriately.

zone of reflection--
Flesh out each category whenever necessary, appropriate.
 Need not be fully filled in until end of project,
 but best done as you go along.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
maybe some of these will move into the Obs.Ovrcm section...
* Problem with displaying toppings in toString method of Pizza.

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow! oo!...
* Processing actually converts all code into Java code first, which can then run.
* Our decision to make a boolean to make sure we couldn't run the keyPressed method more than once is useful for making sure that only one game could be run at a time.

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we changed ___ to ___ bc...
* iterator added
* realization of usage of linkedlist
* started with Processing, but thought it would be easier to get down the underlying aspects of the game before graphics so moved to Java

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
* UML diagram before coding is very helpful!! (flesh out this point later)
* Queue is an interface and therefore abstract. If you want to use a Queue, you need to use one of its implementations (something that implements the Queue interface), or else you won't be able to construct it nor use enqueue/dequeue/etc methods
* Because Processing converts code into Java code, all code inside a .pde file will become code inside a class with the same name as the file. This means any class we declare inside .pde must not have the same name as the file. 
* There can only be one setup() in the whole project (can be clarified)
* setup() is only run once, so listening for keyboard/mouse inputs is not possible here. That can only be done inside draw(), which checks more than once.
||||||||||||||||||||||||||||||||||||||||||



 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================


2022-05-25
--------------------------------------------------------------
Jun Hong :: Configured work repo as directed, filled out readme with project desc and how-to-launch instructions
Raven :: Configured work repo as directed, filled out readme with project desc and how-to-launch instructions
==============================================================

2022-05-26
--------------------------------------------------------------
Jun Hong :: Created team flag, wrote up proprosal, outlined necessary classes and began forming UML diagrams for each planned class
Raven :: Created team flag, wrote up proprosal, outlined necessary classes and began forming UML diagrams for each planned class
==============================================================

2022-05-27
--------------------------------------------------------------
Jun Hong :: Updated gitignore with boss gitignore
==============================================================

2022-05-30
--------------------------------------------------------------
Jun Hong :: Wrote up UML diagram for all classes and described relationships btw classes
Raven :: Wrote up UML diagram for all classes and described relationships btw classes
==============================================================

2022-05-31
--------------------------------------------------------------
Jun Hong :: Created v1, set up all classes with methods & variables based on UML diagram, created flowchart of state transitions, started code implementation for Woo, Station, Topping, Pizza
Raven :: Created v1, set up all classes with methods & variables based on UML diagram, created flowchart of state transitions, started code implementation for Woo, Station, Topping, Pizza, updated README.md following friedChicken's example
Michael :: Created v1, set up all classes with methods & variables based on UML diagram, started code implementation for Woo, Station, Topping, Pizza
==============================================================

2022-06-01
--------------------------------------------------------------
Jun Hong :: Brought Pizza class to compilation success, implemented and tested genPizza() in Woo, implemented accessor methods, instance variables, and overloaded constructors for all classes that implement the Station interface (Cashier, Cut, dough, Oven, Serve, ToppingS), added LLQueue class, worked on default constructor for Woo
Raven :: Brought Pizza class to compilation success, implemented and tested genPizza() in Woo, implemented accessor methods, instance variables, and overloaded constructors for all classes that implement the Station interface (Cashier, Cut, dough, Oven, Serve, ToppingS), added LLQueue class, worked on default constructor for Woo
Michael :: Brought Pizza class to compilation success, implemented and tested genPizza() in Woo
==============================================================

2022-06-02
--------------------------------------------------------------
All :: Updated UML diagrams with new methods and instance variables
All :: Updated Woo constructor with beginning of gameplay and created LL of stations
All :: Began work on v2, now with use of Iterator
Jun Hong :: Began working in Processing again, beginning with graphics
Jun Hong :: Made Woo a driver file, with only setup() and draw(), moved actual code to Game
==============================================================

2022-06-03
--------------------------------------------------------------
All :: Made instructions class, started putting background color and text into processing
All :: Attempted to fix game play method
==============================================================

2022-06-05
--------------------------------------------------------------
All :: Made presentable instructions page
All :: Made key input to change from instruction to first scene of game, implemented loadScene method of Cashier.
All :: Encountered problem with displaying toppings in toString method of Pizza.
All :: Attempted to troubleshoot problem
==============================================================

2022-06-06
--------------------------------------------------------------
All :: Attempted to fix showOrder problem, reworked toString method and constructor for Pizza, processing text
==============================================================
